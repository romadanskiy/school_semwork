@page
@using SchoolProj.Models
@model SchoolProj.Pages.Search

@{
    ViewData["Title"] = "Поиск";
}

@{
    Layout = "Shared/_Layout";
}

<section class="jumbotron text-center">
    <div class="popular-head">Популярные курсы основых предметов</div>
</section>

<div class="album py-5 bg-light">
    <div class="container">

        <div class="row">
            @*
            @foreach (var course in Model.Courses)
            {
                @await Component.InvokeAsync("CourseIndex", course);
            }*@
            
            <div class="col-md-4">
                <div class="popular-subject">Математика</div>
                @{ var math = Model.Courses
                       .Where(c => c.Subjects.Contains("математика"))
                       .OrderByDescending(c => c.NumberOfStudents)
                       .First(); }

                @await Component.InvokeAsync("CoursePopular", math)
            </div>
            
            <div class="col-md-4">
                <div class="popular-subject">Физика</div>
                @{ var physics = Model.Courses
                       .Where(c => c.Subjects.Contains("физика"))
                       .OrderByDescending(c => c.NumberOfStudents)
                       .First(); }

                @await Component.InvokeAsync("CoursePopular", physics)
            </div>
            
            <div class="col-md-4">
                <div class="popular-subject">История</div>
                @{ var history = Model.Courses
                       .Where(c => c.Subjects.Contains("история"))
                       .OrderByDescending(c => c.NumberOfStudents)
                       .First(); }

                @await Component.InvokeAsync("CoursePopular", history)
            </div>

        </div>
    </div>
</div>

<section class="jumbotron text-center">
    <div class="popular-head">Найдем курс специально для вас</div>
</section>

<div class="album py-5 bg-light">
    <div class="container" id="forSort">
        
        <form action="" class="searchCourseForm" onsubmit="return false;">
            <input type="text" id="search-text" placeholder="Поиск по названию">
            <select name="" class="filter">
                <option value="disabled">Выберите предмет</option>
                @foreach (var subject in @Model.Subjects)
                {
                    <option value="@subject.Name">@subject.Name</option>
                }
            </select>
            <button type="button" class="btn btn-outline-primary btn-sm" onclick="searchCourse()">Найти</button>
        </form>
        
        <form action="" class="sortCourseForm" onsubmit="return false;">
            <div class="centered">
                <input type="radio" id="r1" name="price">
                <label for="r1">Сначала дешевле</label>
            </div>
            <div class="centered">
                <input type="radio" id="r2" name="price">
                <label for="r2">Сначала дороже</label>
            </div>
            <button type="button" class="btn btn-outline-primary btn-sm" onclick="sortCourse()">Сортировать</button>
        </form>
        
        <div class="row" id="forSearch">
            @foreach (var course in Model.Courses.OrderByDescending(c => c.Id))
            {
                @await Component.InvokeAsync("CourseDisplayNone", course);
            }
        </div>
        
    </div>
</div>