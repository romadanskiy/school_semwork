@page "{courseId?}"
@model SchoolProj.Pages.CoursePage

@{
    ViewData["Title"] = "Курс #" + @Model.Course.Id;
}

@{
    Layout = "Shared/_Layout";
}

<section class="jumbotron text-center">
    <div class="container-course">
        <h1>@Model.Course.Name</h1>
    </div>
</section>

<div class="course-block">
    <div class="container">

        <div class="course-card simple-border">
            <div class="course-description">@Model.Course.Description</div>
            <div class="course-content-info">
                @if (@Model.UserHasThisCourse)
                {
                    @await Component.InvokeAsync("CourseContentFull", @Model.Course)
                }
                @if (!@Model.UserHasThisCourse)
                {
                    @await Component.InvokeAsync("CourseContent", @Model.Course)
                    @if (Model.UserIsAuthorized)
                    {
                        <!-- TODO кнопка купить -->
                        <button class="btn btn-primary btn-sm">Купить</button>
                    }
                    @if (!Model.UserIsAuthorized)
                    {
                        <div><a href="@Url.Page("./SignIn")">Войдите</a>, чтобы купить</div>
                    }
                }
            </div>
        </div>

        <div class="course-comments simple-border">
            <h2 class="comments-headline">Комментарии</h2>
            @if (Model.UserIsAuthorized)
            {
                <form class="add-comment-form" action="" onsubmit="return false;">
                    <textarea id="commentInput" placeholder="Введите комментарий"></textarea>
                    <button onclick="addComment()" class="btn btn-primary btn-sm" type="submit">Добавить</button>
                </form>
            }
            @if (!Model.UserIsAuthorized)
            {
                <div><a href="@Url.Page("./SignIn")">Войдите</a>, чтобы оставить отзыв</div>
            }
            <div id="comments">
                @foreach (var comment in @Model.Comments.OrderByDescending(c => c.CreationDate))
                {
                    @await Component.InvokeAsync("CommentForCourse", comment)
                }
            </div>
        </div>
    
    </div>
</div>
